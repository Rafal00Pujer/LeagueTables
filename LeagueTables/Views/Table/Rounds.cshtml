@model LeagueTables.Models.Table.TableRoundsModel

@{
    ViewData["Title"] = $"{Model.TableName} Matches";
}

<div class="row">
    <div class="col-12">
        <h1 class="text-center">@ViewData["Title"]</h1>
    </div>
</div>

@if (Model.Rounds.Count == 0)
{
    <div class="mt-3">
        <p class="text-center">There is no rounds for this table.</p>
    </div>
}
else
{
    <div class="row mt-3">
        <nav>
            <div class="nav nav-pills justify-content-center" id="rounds-tab" role="tablist">
                @foreach (var (index, round) in Enumerable.Range(0, Model.Rounds.Count()).Zip(Model.Rounds.OrderBy(x => x.RoundNumber)))
                {
                    <button id="rounds-@index-tab" class="nav-link @(index == 0 ? "active" : "")"
                            data-bs-toggle="pill" data-bs-target="#rounds-@index" type="button" role="tab"
                            aria-controls="rounds-@index" aria-selected="@(index == 0 ? "true" : "false")">
                        @round.Name
                    </button>
                }
            </div>
        </nav>
    </div>

    <div class="tab-content mt-3" id="rounds-tabContent">
        @foreach (var (roundIndex, round) in Enumerable.Range(0, Model.Rounds.Count()).Zip(Model.Rounds.OrderBy(x => x.RoundNumber)))
        {
            <div id="rounds-@roundIndex" class="tab-pane fade @(roundIndex == 0 ? "active show" : "")"
                 role="tabpanel" aria-labelledby="rounds-@roundIndex-tab" tabindex="0">

                @if (round.Matches.Count > 0)
                {
                    @foreach (var match in round.Matches.OrderBy(x => x.Date))
                    {
                        <div class="row py-2 border-1 border">
                            <div class="col-2 pt-2 border-1 border-end">
                                <span>@match.Date</span>
                            </div>

                            <div class="col-10">

                                @foreach (var (scoreIndex, score) in Enumerable.Range(0, match.Scores.Count).Zip(match.Scores))
                                {
                                    var borderLocationClass = "";

                                    if (scoreIndex == 0)
                                    {
                                        borderLocationClass += "border-bottom";
                                    }

                                    <div class="row border-1 @borderLocationClass">

                                        <div class="col-2">
                                            <span>@score.TeamName</span>
                                        </div>

                                        <div class="col-1 border-1 border-start">
                                            <span>@score.Score</span>
                                        </div>

                                    </div>
                                }
                            </div>
                        </div>
                    }
                }
                else
                {
                    <div>
                        <p class="text-center">There is no matches for this round.</p>
                    </div>
                }
            </div>
        }
    </div>
}